---
# image: node:8-alpine
# NOTE: this script is specifically authored for runner at naudb 196 server
# EXECUTOR: shell

before_script:
  - export ROOT=`pwd`
  - export OUTPUT=/home/gitlab-runner/tmp/build/
  # prepare needed software (not applicable for shell executor)
  # - sudo apt-get update -y
  # - sudo apt-get install -y python git openssh-client curl build-essential
  # - sudo npm i -g npm
  - node -v
  - npm -v

cache:
  untracked: true
  key: "GOALIFY-CHAT-SERVER-V1"
  paths:
    - echo $ROOT
    - export ROOT=`pwd`
    - $ROOT/node_modules
    - $ROOT/.meteor/local
    - $ROOT/packages/rocketchat-livechat/.npm
    - $ROOT/packages/rocketchat-livechat/.app/node_modules
    - $ROOT/packages/rocketchat-livechat/.app/.meteor/local

stages:
  - test
  - deploy

test:
  stage: test
  only:
    - develop
  script:
    - npm install
    - npm run lint
    - npm run testunit
    - npm run stylelint

build_deploy:
  # variables: AWS_ACCESS_KEY_ID & AWS_SECRET_ACCESS_KEY set in gitlab CI settings
  stage: deploy
  only:
    - master
    - test-gitlab-ci
  script:
    # Install meteor VM (not applicable for shell executor)
    # - if [ ! -e "/usr/local/bin/meteor" ]; then curl https://install.meteor.com | sed s/--progress-bar/-sL/g | /bin/sh; fi
    # install aws CLI to do S3 deploy
    - pip install awscli --upgrade --user
    - meteor --version
    - meteor npm install
    - mkdir -p ~/tmp/build
    - meteor build --server-only ~/tmp/build
    - cd /home/gitlab-runner/tmp/build/
    - mv Goalify.Chat.tar.gz goalify-chat-server.tar.gz
    - aws s3 cp *.gz s3://goalify.chat/downloads/beta/
  artifacts:
    paths:
      - /home/gitlab-runner/tmp/build/*.gz
